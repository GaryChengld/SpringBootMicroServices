openapi: 3.0.0
info:
  title: Movie APIs
  description: REST APIs of simple movie service
  version: "1.0.0"
  contact:
    email: chengld@yahoo.com
  license:
    name: Apache 2.0

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/GaryCheng/movieAPI/1.0.0
  - url: http://localhost:8081/api/v1

tags:
  - name: movie
    description: Operations about movie

paths:
  '/movie/{id}':
    get:
      tags:
        - movie
      summary: Find movie by ID
      description: Returns a single movie
      parameters:
        - name: id
          in: path
          description: ID of movie to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
    put:
      tags:
        - movie
      summary: Update a movie
      operationId: upateMovie
      parameters:
        - name: id
          in: path
          required: true
          description: ID of movie that needs to be updated
          schema:
            type: string
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '405':
          description: Invalid input
        '404':
          description: Movie not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
  '/movie':
    post:
      tags:
        - movie
      summary: Create a movie
      operationId: createMovie
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
  '/movie/imdbId/{imdbId}':
    get:
      tags:
        - movie
      summary: Find movie by imdb id
      operationId: findMovieByImdbId
      parameters:
        - name: imdbId
          in: path
          required: true
          description: imdb ID of movie to return
          schema:
            type: string
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
  '/movie/search/{keyword}':
    get:
      tags:
        - movie
      summary: Search movie by keyword
      operationId: searchMovie
      parameters:
        - name: keyword
          in: path
          required: true
          description: keyword of movie
          schema:
            type: string
      responses:
        '200':
          description: operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
components:
  schemas:
    Movie:
      type: object
      required:
        - imdbId
        - title
      properties:
        id:
          type: string
        imdbId:
          type: string
        title:
          type: string
        overview:
          type: string
        runningTime:
          type: integer
        genres:
          type: array
          items:
            type: string
        releaseDate:
          type: string
        imageUrls:
          type: array
          items:
            type: string
        updatedDate:
          type: string